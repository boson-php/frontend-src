name: Build Binaries

on:
  push:
  release:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_DIR: ./build
  SOURCES_DIR: ./

jobs:
  #
  # ----------------------------------------------------------------------------
  #   Windows
  # ----------------------------------------------------------------------------
  #
  build-windows:
    strategy:
      fail-fast: true
      matrix:
        build-type:
          - Release
        platform:
          - { arch: x86_64 }

    runs-on: windows-latest
    name: "Windows-WebView2-${{ matrix.platform.arch }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compile
        uses: ./.github/actions/compile
        with:
          src-dir: ${{ env.SOURCES_DIR }}
          build-dir: ${{ env.BUILD_DIR }}
          backend: WebView2
          platform: Windows
          build-type: ${{ matrix.build-type }}
          cmake-args: -Dsaucer_msvc_hack=ON -Dsaucer_serializer=Rflpp

      - name: Upload
        uses: ./.github/actions/upload
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Windows-WebView2-${{ matrix.platform.arch }}"
          path: ${{ env.BUILD_DIR }}/bin/

  #
  # ----------------------------------------------------------------------------
  #   MacOS
  # ----------------------------------------------------------------------------
  #
  build-macos-universal:
    strategy:
      fail-fast: true
      matrix:
        backend:
          - WebKit
        build-type:
          - Release

    runs-on: macos-latest
    name: "MacOS-WebKit-Universal"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compile
        uses: ./.github/actions/compile
        with:
          src-dir: ${{ env.SOURCES_DIR }}
          build-dir: ${{ env.BUILD_DIR }}
          backend: ${{ matrix.backend }}
          platform: macOS
          build-type: ${{ matrix.build-type }}
          cmake-args: '-DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"'

      - name: Upload
        uses: ./.github/actions/upload
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "MacOS-WebKit-Universal"
          path: ${{ env.BUILD_DIR }}/bin/

  #
  # ----------------------------------------------------------------------------
  #   GNU Linux
  # ----------------------------------------------------------------------------
  #
  # build-linux-qt5:
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       build-type:
  #         - Release
  #       platform:
  #         # Check these for architecture compatibility:
  #         # https://packages.debian.org/search?searchon=names&keywords=qtwebengine5-dev
  #         # https://hub.docker.com/_/debian/tags?page=&page_size=&ordering=&name=sid-slim
  #         # https://github.com/tonistiigi/binfmt?tab=readme-ov-file#build-test-image
  #         - { arch: "x86_64", qemuArch: "linux/amd64" }
  #         #- { arch: "x86", qemuArch: "linux/386" }
  #         - { arch: "aarch64", qemuArch: "linux/arm64/v8" }
  #         #- { arch: "mips64el", qemuArch: "linux/mips64le" } # el in LLVM, le in qemu/docker.
  #
  #   runs-on: ubuntu-latest
  #   name: "Linux-Qt5-${{ matrix.platform.arch }}"
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #
  #     - name: Setup container
  #       uses: ./.github/actions/setup-container
  #       with:
  #         qemuArch: ${{ matrix.platform.qemuArch }}
  #         dockerArch: ${{ matrix.platform.dockerArch || 'SAME_AS_QEMU' }}
  #         image: "debian:sid-slim"
  #
  #     - name: Install dependencies
  #       uses: ./.github/actions/run-in-container
  #       with:
  #         command: apt update && apt install -y build-essential git gcc-14 cmake xvfb qtbase5-dev qtbase5-dev-tools qtdeclarative5-dev libqt5webchannel5-dev qtwebengine5-dev
  #
  #     - name: Compile
  #       uses: ./.github/actions/compile
  #       with:
  #         src-dir: ${{ env.SOURCES_DIR }}
  #         build-dir: ${{ env.BUILD_DIR }}
  #         backend: Qt5
  #         platform: Linux
  #         build-type: ${{ matrix.build-type }}
  #         in-container: true
  #         arm-hack: ${{ matrix.platform.arch }}
  #
  #     - name: Upload
  #       uses: ./.github/actions/upload
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         name: "Linux-Qt5-${{ matrix.platform.arch }}"
  #         path: ${{ env.BUILD_DIR }}/bin/

  #build-linux-qt6:
  #  strategy:
  #    fail-fast: true
  #    matrix:
  #      build-type:
  #        - Release
  #      platform:
  #        # Check these for architecture compatibility:
  #        # https://packages.debian.org/search?searchon=names&keywords=qt6-webengine-dev
  #        # https://hub.docker.com/_/debian/tags?page=&page_size=&ordering=&name=sid-slim
  #        # https://github.com/tonistiigi/binfmt?tab=readme-ov-file#build-test-image
  #        - { arch: "x86_64", qemuArch: "linux/amd64" }
  #        #- { arch: "x86", qemuArch: "linux/386" }
  #        - { arch: "aarch64", qemuArch: "linux/arm64/v8" }
  #
  #  runs-on: ubuntu-latest
  #  name: "Linux-Qt6-${{ matrix.platform.arch }}"
  #
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #
  #    - name: Setup container
  #      uses: ./.github/actions/setup-container
  #      with:
  #        qemuArch: ${{ matrix.platform.qemuArch }}
  #        dockerArch: ${{ matrix.platform.dockerArch || 'SAME_AS_QEMU' }}
  #        image: "debian:sid-slim"
  #
  #    - name: Install dependencies
  #      uses: ./.github/actions/run-in-container
  #      with:
  #        command: apt update && apt install -y build-essential git gcc-14 cmake xvfb qt6-base-dev qt6-tools-dev qt6-declarative-dev qt6-webchannel-dev qt6-webengine-dev qt6-svg-dev
  #
  #    - name: Compile
  #      uses: ./.github/actions/compile
  #      with:
  #        src-dir: ${{ env.SOURCES_DIR }}
  #        build-dir: ${{ env.BUILD_DIR }}
  #        backend: Qt6
  #        platform: Linux
  #        build-type: ${{ matrix.build-type }}
  #        in-container: true
  #        arm-hack: ${{ matrix.platform.arch }}
  #
  #    - name: Upload
  #      uses: ./.github/actions/upload
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}
  #        name: "Linux-Qt6-${{ matrix.platform.arch }}"
  #        path: ${{ env.BUILD_DIR }}/bin/

  build-linux-gtk:
    strategy:
      fail-fast: true
      matrix:
        build-type:
          - Release
        platform:
          # Check these for architecture compatibility:
          # https://packages.debian.org/search?searchon=names&keywords=libgtk-4-dev
          # https://hub.docker.com/_/debian/tags?page=&page_size=&ordering=&name=sid-slim
          # https://github.com/tonistiigi/binfmt?tab=readme-ov-file#build-test-image
          - { arch: "x86_64", qemuArch: "linux/amd64" }
          #- { arch: "x86", qemuArch: "linux/386" }
          - { arch: "aarch64", qemuArch: "linux/arm64" }
          - { arch: "arm", qemuArch: "linux/arm/v5" }
          #- { arch: "ppc64le", qemuArch: "linux/ppc64le" }
          #- { arch: "riscv64", qemuArch: "linux/riscv64" }
          #- { arch: "s390x", qemuArch: "linux/s390x" }
          #- { arch: "mips64el", qemuArch: "linux/mips64le" } # el in LLVM, le in qemu/docker.

    runs-on: ubuntu-latest
    name: "Linux-WebKitGtk-${{ matrix.platform.arch }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup container
        uses: ./.github/actions/setup-container
        with:
          qemuArch: ${{ matrix.platform.qemuArch }}
          dockerArch: ${{ matrix.platform.dockerArch || 'SAME_AS_QEMU' }}
          image: "debian:sid-slim"

      - name: Install dependencies
        uses: ./.github/actions/run-in-container
        with:
          command: apt update && apt install -y build-essential git gcc-14 cmake xvfb libgtk-4-dev libwebkitgtk-6.0-dev libadwaita-1-dev

      - name: Compile
        uses: ./.github/actions/compile
        with:
          src-dir: ${{ env.SOURCES_DIR }}
          build-dir: ${{ env.BUILD_DIR }}
          backend: WebKitGtk
          platform: Linux
          build-type: ${{ matrix.build-type }}
          in-container: true
          arm-hack: ${{ matrix.platform.arch }}

      - name: Upload
        uses: ./.github/actions/upload
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Linux-WebKitGtk-${{ matrix.platform.arch }}"
          path: ${{ env.BUILD_DIR }}/bin/

